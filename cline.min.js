const ENGAGEMENT_SESSION_LIMIT=1e4;let session_start=null;let user_engaged=false;let user_converted=false;let user_bounced=true;let sessionId="";let variants={};document.addEventListener("DOMContentLoaded",event=>{const timeout=new Promise((resolve,reject)=>{setTimeout(()=>{resolve("timeout")},1200)});Promise.race([VariantApp.initialize(),timeout]).then(result=>{document.body.style.visibility="visible"})});window.addEventListener("popstate",()=>{if(variants[window.location.href]){try{variants[window.location.href].forEach(({original,copy})=>{console.log("Replacing: ",original," with: ",copy);swapHTMLContent(original,copy)})}catch{}}});function swapHTMLContent(source,substitute){const escapeRegExp=string=>string.replace(/[.*+\-?^${}()|[\]\\]/g,"\\$&");const escapedSource=escapeRegExp(source);if(doesIncludeHTML(source)||doesIncludeHTML(substitute)){setTimeout(()=>{const temporarySource=document.createElement("div");temporarySource.innerHTML=source;const temporarySubstitute=document.createElement("div");temporarySubstitute.innerHTML=substitute;const domWalker=document.createTreeWalker(document.body,NodeFilter.SHOW_ELEMENT,null,false);let currentElement;while(currentElement=domWalker.nextNode()){if(currentElement.innerHTML.includes(source)){modifyElementContent(currentElement,temporarySource,temporarySubstitute)}}},0)}else{const textWalker=document.createTreeWalker(document.body,NodeFilter.SHOW_TEXT,null,false);const pattern=new RegExp(escapedSource,"g");let textNode;while(textNode=textWalker.nextNode()){if(!textNode.parentElement||textNode.parentElement.tagName.toLowerCase()==="script"){continue}textNode.textContent=textNode.textContent.replace(pattern,substitute)}}}function doesIncludeHTML(text){return/<[a-z][\s\S]*>/i.test(text)}function modifyElementContent(element,temporarySource,temporarySubstitute){const newFragment=document.createDocumentFragment();for(const childNode of Array.from(element.childNodes)){if(childNode.nodeType===Node.ELEMENT_NODE&&childNode.outerHTML.includes(temporarySource.innerHTML)){const replaced=childNode.outerHTML.replace(temporarySource.innerHTML,temporarySubstitute.innerHTML);const tempElement=document.createElement("div");tempElement.innerHTML=replaced;newFragment.appendChild(tempElement.firstChild)}else{newFragment.appendChild(childNode)}}element.textContent="";element.appendChild(newFragment)}async function getExperiment(siteId,sessionStartTime,userBrowser,pageReferrer){const endpointUrl="https://api.cline.ai/experiment/active/"+siteId;const response=await fetch(endpointUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({time:sessionStartTime,languages:typeof userBrowser!=="undefined"?userBrowser.languages||userBrowser.language:undefined,platform:typeof userBrowser!=="undefined"?userBrowser.platform||userBrowser.userAgentData&&userBrowser.userAgentData.platform:undefined,referrer:pageReferrer,urlPath:new URL(window.location.href).pathname})});return response.json()}async function transmitSessionData(data){const dataEndpointUrl="https://api.cline.ai/session/"+data.sessionId;try{const response=await fetch(dataEndpointUrl,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(data)});console.log("Session data sent: ",data)}catch(error){console.error("An error occurred while sending data:",error)}}function trackEngagement(){const session_duration=new Date-session_start;if(session_duration>=ENGAGEMENT_SESSION_LIMIT){user_engaged=true;transmitSessionData({engaged:true,sessionId:sessionId})}else{setTimeout(trackEngagement,ENGAGEMENT_SESSION_LIMIT-session_duration)}}function trackConversion(){user_converted=true;user_bounced=false;transmitSessionData({converted:true,sessionId:sessionId})}function trackBounce(){if(user_bounced){transmitSessionData({bounced:true,sessionId:sessionId})}}const VariantApp={};VariantApp.initialize=async function(){var site_id=window.EXPERIMENT_SITE_ID;session_start=new Date;window.addEventListener("beforeunload",trackBounce);document.addEventListener("visibilitychange",trackEngagement);document.addEventListener("conversion",trackConversion);setTimeout(trackEngagement,ENGAGEMENT_SESSION_LIMIT);const variantsResponse=await getExperiment(site_id,session_start,navigator,document.referrer);variants[window.location.href]=variantsResponse.activeVariants;sessionId=variantsResponse.sessionId;try{variants[window.location.href].forEach(({original,copy})=>{console.log("Replacing: ",original," with: ",copy);swapHTMLContent(original,copy)})}catch{}};VariantApp.logVariantConversion=function(){document.dispatchEvent(new CustomEvent("conversion",{}))};window.VariantApp=VariantApp;
